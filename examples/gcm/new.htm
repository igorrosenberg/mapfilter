<!DOCTYPE html>
<html>
  <head>
    <title>Google Maps and Calendar</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <script type="text/javascript" src="js/util.js"></script>
    <script type="text/javascript" src="js/json2.js"></script>
    <style >
html, body {
  height: 100%;
  margin: 0;
  padding: 0;
}

#map_canvas {
  height: 100%;
  width:100%;
  border: 1px solid blue;
  background-color: yellow;
}

  #footer {
    clear:both;
  }

p {line-height: 100%;}
h4 {margin:0px;}

ul, ol { margin-left: 1em; padding-left: 0px; }
#log li { margin-bottom:0.25em; list-style-type: none; }

@media print {
	  html, body {
		 height: auto;
	  }

	  #map_canvas {
		 height: 650px;
	  }

} // end @media print 
</style>
    <script>

function loadCalendars() {
	var newData = [
     {title:'ONE', lat:48.00, lng:-1.50, info: 'xxx1'},
     {title:'TWO', lat:48.15, lng:-1.66, info: 'xxx2'},
     {title:'THREE', lat:48.30, lng:-1.80, info: 'xxx3'}
     ];
	// log ('events before load: ' + event_markers.values().length );
	for (var i = 0 ; i < newData.length ; i++) {
		var x = newData[i];
		// log ('event loaded: ' + x );
        event_markers.add (x);
		}
	// log ('events after load: ' + event_markers.values().length );


	// var gCalURL = 'https://www.google.com/calendar/feeds/aikidorennes@gmail.com/public/basic';
	var gCalURL = 'mock/gcal.json';
	var startDay= '2012-07-01T00:00:00-00:00';
	var endDay = '2013-06-31T00:00:00-00:00';
	getGCalData(gCalURL, startDay, endDay);
	}
		
function getGCalData(gCalUrl, startDays, endDays) {
	log ('loading: ' + gCalUrl);
	gCalUrl = gCalUrl.replace(/\/basic$/, '/full');

	// http://code.google.com/apis/calendar/docs/2.0/reference.html
	gCalObj = {
		'start-min': startDays,
		'start-max': endDays,
		'max-results': 200,
		'orderby'  : 'starttime',
		'sortorder': 'ascending',
		'singleevents': false
		};

	var array = [];
	for (var key in gCalObj) {
 		array.push( key + '=' + gCalObj[key] ) ;
	}		
	var mapString = array.join("&");
	var ajaxURL = gCalUrl + "?alt=json&" + mapString;
	var xmlhttp=new XMLHttpRequest();
	xmlhttp.onreadystatechange = function () {
		if (xmlhttp.readyState==4) {
			if (xmlhttp.status==200) {
				 log ('Response received, length=' + xmlhttp.responseText.length);
				 var calendarAnswer = JSON.parse(xmlhttp.responseText);
				 treatCalendarEvents(calendarAnswer);
			} else {
				 log ('Failure... status=' + xmlhttp.status);
				 }
		 }				
	  };

	xmlhttp.open("GET",ajaxURL,true);
	xmlhttp.send();
}

function treatCalendarEvents(calendarAnswer) {
	var title = calendarAnswer.feed.title['$t']	
	var calendarHref = calendarAnswer.feed.link[0].href  // needed for cross reference later	 

	if (calendarAnswer.feed.entry)
	for (var ii=0; calendarAnswer.feed.entry[ii]; ii++) {
		log ('Treating entry ' + ii);
		var curEntry = calendarAnswer.feed.entry[ii];
		if (!(curEntry['gd$when'] && curEntry['gd$when'][0]['startTime'])) {
			log(" skipping entry (no gd$when) " + curEntry['title']['$t']);
			continue;
		};
		var urlMap = {};
		for (var jj=0; curEntry.link[jj]; jj++) {
		 log ('Treating entry link ' + jj);
			var curLink = curEntry.link[jj];
			if (curLink.type == 'text/html') {
				// looks like when rel='related', href is original event info (like meetup.com)
				// when rel='alternate', href is the google.com calendar event info
				urlMap[curLink.rel] = curLink.href;
			}
		}

		var event = {
			calTitle: title,
			name: curEntry['title']['$t'],
			desc: curEntry['content']['$t'],
			addrOrig: curEntry['gd$where'][0]['valueString'] || '',  // 'location' field of the event
			url: urlMap.related || urlMap.alternate, // TODO - is this what we want? see href above
			dateStart: curEntry['gd$when'][0]['startTime'],
			dateEnd: curEntry['gd$when'][0]['endTime']
		};
		log ('created event ' + event.name + ' as ' +  JSON.stringify(event));
		if (event.addrOrig) {
			log("Maybe a new address, get ready to geodecode:" + event.addrOrig);
		} else {
			log(" Skipping blank address for "+event.name+" ["+event.addrOrig+"]",event);
		}
		log("parsed curEntry "+ii+": ", event.name);
		log("TODO variable 'event' is lost, push it somewhere!");
		var content = document.createElement('li');
		content.appendChild(document.createTextNode(event.name));
		document.getElementById("log_ul").appendChild(content);
	}
} // end treatCalendarEvents

function createMarker(marker){
	// new Gmarker object
	var gMarker = new google.maps.Marker({
		position: new google.maps.LatLng(marker.lat, marker.lng),
		title: marker.desc,
		map: map,
		zIndex: 2,
		//  icon: image,
		});

		// add Listener that pops an infoWindow 
		google.maps.event.addListener(gMarker, 'click', function() {
			var infowindow = new google.maps.InfoWindow({content: marker.info});
			infowindow.open(map, gMarker);
		});
		return gMarker;
}  // end createMarker
  
function addMarkersToMap() {
	var values = event_markers.values();
	for (var i = 0; i < values.length; i++) {
		// remember marker so hiding is posible
		values[i].gMarker = createMarker(values[i]);
		} // end for markers
} // end addMarkersToMap

function hideMarkersFromMap() {
	var values = event_markers.values();
	for (var i = 0; i < values.length; i++) {
		var marker = values[i];
		log ('hiding marker ' + marker.title + ' at ' + marker.lat) ;
		marker.gMarker.setMap(null) ;
	} // end for markers
} // end addMarkersToMap

function createMap() {

	// only create map if it doesn't exist
	if (!map) {
		var mapOptions = {
			zoom: 8,
			center: new google.maps.LatLng(48.114767,-1.68251), // Rennes
			mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);
     }

   } // end createMap

function initialize() {
	// document.getElementById('map_canvas').style.display = 'block' ;
	// document.getElementById('button').style.display = 'none' ;
	loadCalendars();
	log ('UNCOMMENT');
	// createMap();
	// addMarkersToMap();
} // end initialize

// the google map object
var map;

// list calendars currently active. 
var calendarList = [];

// list of the events with information. 
var event_markers = new Set();

/*
 * Add google maps script if not there yet = async load gmaps
 */ 
function loadScript() {

	// calendarList = calendarList1;

	var g_id = 'google_maps';
	if ( ! document.getElementById(g_id) ) {
		var script = document.createElement('script');
		script.id = g_id;
		script.type = 'text/javascript';
		script.src = 'https://maps.googleapis.com/maps/api/js?v=3.10&sensor=false&callback=initialize';
		document.body.appendChild(script);
	} else {
		initialize();
	}            

} // end loadScript


// DEBUG remove these methods showLog, hideLog

function showLog(){
	document.getElementById("log").style.display='block';
}
function hideLog(){
	document.getElementById("log").style.display='none';
}

    </script>
<style type="text/css" media="screen, print, projection">
	body,
	html {
		margin:0;
		padding:0;
		color:#000;
		background:#a7a09a;
	}
	#wrap {
		width:750px;
		margin:0 auto;
		background:#99c;
	}
	#header {
	    	padding:5px 10px;
		background:#ddd;
	}
	h1 {
	    margin:0;
	}
	#nav {
		padding:5px 10px;
		background:#c99;
	}
	#nav ul {
		margin:0;
		padding:0;
		list-style:none;
	}
	#nav li {
		display:inline;
		margin:0;
		padding:0;
	}
	#main {
		float:left;
		width:480px;
		padding:10px;
		background:#9c9;
	}
	#wrap_map_canvas {
		height:300px;
		width:460px;
	}
	h2 {
		margin:0 0 1em;
	}
	#sidebar {
		float:right;
		width:230px;
		padding:10px;
		background:#99c;
	}
	#footer {
		clear:both;
		padding:5px 10px;
		background:#cc9;
	}
	#footer p {
		margin:0;
    }
	* html #footer {
		height:1px;
	}
	</style>
</head>
<body>
<div id="wrap">
	<div id="header"><h1>Carte des stages</h1></div>
	<div id="nav">
		<ul>
			<li><a href="/">Option 1</a></li>
			<li><a href="/">Option 2</a></li>
			<li><a href="/">Option 3</a></li>
			<li><a href="/">Option 4</a></li>
			<li><a href="/">Option 5</a></li>
		</ul>
	</div>
  <div id="main">
    <div id=wrap_map_canvas>
      <div id=map_canvas>
      </div>
    </div>
  </div>
  <div id="sidebar">
    <div id="button">
	<a href='#' onclick="loadScript()">load map</a><br/>
	<a href='#' onclick="hideMarkersFromMap()">hideMarkersFromMap</a><br/><br/>
	<br/>		
	<a href='http://jsfiddle.net/B3a86/2/'>Example many points</a><br/>		
	<a href='https://developers.google.com/maps/documentation/javascript/reference#Map'>Google Maps API reference</a><br/>	
	<br/>	
	<a href='#' onclick="showLog()">show Log</a>	
	<a href='#' onclick="hideLog()">hide Log</a>	
     </div>	
  </div>	
	<div id='footer'>
		<div id='log'><h4>Logs</h4><ul id='log_ul'></ul></div>
	</div>
</div>
</body>
</html>
